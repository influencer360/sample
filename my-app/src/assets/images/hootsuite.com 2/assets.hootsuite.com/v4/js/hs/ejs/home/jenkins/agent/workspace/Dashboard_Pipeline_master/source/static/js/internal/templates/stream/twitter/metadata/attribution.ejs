module.exports = { render: function(data) {
var __t, __p = '', __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }


var verb = null;
var iconClass = null;
var username;
var message = data && data.message ? data.message : {};

if (_.has(message, '-_-') && message['-_-'].action && _.has(message['-_-'].action, 'verb') && message['-_-'].action.verb != 'posted' && message['-_-'].action.verb != 'scheduled') {
  var message = message['-_-'];
  var displayName;
  if (!!message.action.actor.username) {
    displayName = message.action.actor.username;
  } else if (!!message.action.actor.name) {
    displayName = message.action.actor.name;
  } else {
    displayName = "Someone in your network";
  }
  if (!!message.action.actor.id) {
    username = "<button class='_username _userInfoPopup _userInfoPopupHere _standardized link' title='" + displayName + "' userid='" + message.action.actor.id + "'>" + displayName + "</button>";
  } else {
    username = displayName;
  }

  switch (message.action.verb) {
    case 'replied':
      // L10N: %s is the user who has commented on the post
      verb = translation._('%s commented on this').replace("%s", username);
      iconClass = 'comment';
      break;
    case 'liked':
      // L10N: %s is the user who has liked the post
      verb = translation._('%s liked this').replace("%s", username);
      iconClass = 'unLike';
      break;
    case 'shared':
      // L10N: %s is the user who has retweeted the tweet
      verb = translation._('%s retweeted').replace("%s", username);
      iconClass = 'retweet';
      break;
    default:
      // L10N: %s is the user who has interacted with the post
      verb = translation._('%s interacted with this').replace("%s", username);
      iconClass = 'notFavorite';
      break;
  }
}
if (!!verb && !!iconClass) { ;
__p += '\n  <div class="-messageMetadata">\n    <div class="-attribution">\n      <span class="icon-19 ' +
((__t = ( iconClass )) == null ? '' : __t) +
'"></span>\n      ' +
((__t = ( verb )) == null ? '' : __t) +
'\n    </div>\n  </div>\n';
 } ;
__p += '\n';
return __p
} };